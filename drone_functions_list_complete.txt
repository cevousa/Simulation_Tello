# =================================================
# ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÉ‡∏ô drone_controller.py
# ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: 2024 (Complete Version - 80+ Functions)
# =================================================

## üìã ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ (Connection & Management)

1. **__init__(use_simulation=True)** - ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Drone Controller
2. **disconnect()** - ‚úÖ ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠, ‡∏•‡∏á‡∏à‡∏≠‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏ö‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà, ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏•‡∏°, ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ drone_controller.disconnect()
3. **stop_simulation()** - ‡∏´‡∏¢‡∏∏‡∏î CoppeliaSim simulation
4. **get_battery()** - ‡∏î‡∏π‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà (0-100% ‡∏´‡∏£‡∏∑‡∏≠ -1)

## üöÅ ‡∏Å‡∏≤‡∏£‡∏ö‡∏¥‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (Basic Flight)

5. **takeoff(height=100)** - ‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏¥‡∏ô (height: cm, default=100)
6. **land()** - ‡∏•‡∏á‡∏à‡∏≠‡∏î
7. **hover(duration)** - ‡πÇ‡∏Æ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ duration ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

## üß≠ ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà (Movement)

### ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ó‡∏ò‡πå (‡∏´‡∏ô‡πà‡∏ß‡∏¢: cm)
8. **move_forward(distance)** - ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤
9. **move_back(distance)** - ‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏á (‡∏ó‡∏±‡πâ‡∏á sim & real)
10. **move_left(distance)** - ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏õ‡∏ó‡∏≤‡∏á‡∏ã‡πâ‡∏≤‡∏¢
11. **move_right(distance)** - ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏õ‡∏ó‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤
12. **move_up(distance)** - ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏∂‡πâ‡∏ô
13. **move_down(distance)** - ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á

### ‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô
14. **rotate_clockwise(degrees)** - ‡∏´‡∏°‡∏∏‡∏ô‡∏ï‡∏≤‡∏°‡πÄ‡∏Ç‡πá‡∏°‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤
15. **rotate_counter_clockwise(degrees)** - ‡∏´‡∏°‡∏∏‡∏ô‡∏ó‡∏ß‡∏ô‡πÄ‡∏Ç‡πá‡∏°‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤

### ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô
16. **move_to_position(x, y, z)** - ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞
17. **get_position()** - ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô [x, y, z]
18. **get_orientation()** - ‡∏î‡∏∂‡∏á‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á (heading, roll, pitch, yaw)
19. **update_orientation()** - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï orientation ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô

## ÔøΩ ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ (Camera & Photography)

### ‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ
20. **capture(count=3, delay=1.5)** - ‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ (‡∏ó‡∏±‡πâ‡∏á‡∏ã‡∏¥‡∏°‡πÅ‡∏•‡∏∞‡πÇ‡∏î‡∏£‡∏ô‡∏à‡∏£‡∏¥‡∏á)
21. **take_bottom_picture()** - ‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏•‡πà‡∏≤‡∏á (simulation)

### ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÇ‡∏î‡∏£‡∏ô‡∏à‡∏£‡∏¥‡∏á - DroneTello class)
22. **start_camera_display()** - ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Å‡∏•‡πâ‡∏≠‡∏á
23. **stop_camera_display()** - ‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Å‡∏•‡πâ‡∏≠‡∏á
24. **capture(filename="tello_picture.jpg")** - ‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
25. **scan_qr(filename)** - ‡πÅ‡∏™‡∏Å‡∏ô QR ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
26. **wait(seconds)** - ‡∏£‡∏≠‡πÄ‡∏ß‡∏•‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
27. **cleanup()** - ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏¥‡∏î

### DroneCamera class (Simulation)
28. **simcapture(timeout=5.0)** - ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤
29. **simcapturebottom(timeout=5.0)** - ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏•‡πà‡∏≤‡∏á

## üîç ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏Å‡∏ô QR Code (QR Code Scanning)

30. **scan_qr(image_path=None)** - ‡πÅ‡∏™‡∏Å‡∏ô QR Code ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û

### QRCodeScanner class
31. **scan_qr_code(image_path)** - ‡πÅ‡∏™‡∏Å‡∏ô QR Code
32. **draw_qr_detection(image_path, output_path=None)** - ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≠‡∏ö‡∏£‡∏≠‡∏ö QR Code

## üéØ Mission Pad Detection

### ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö
33. **enable_mission_pads()** - ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Mission Pad detection
34. **disable_mission_pads()** - ‡∏õ‡∏¥‡∏î Mission Pad detection

### ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö
35. **get_mission_pad_id()** - ‡∏î‡∏∂‡∏á Mission Pad ID (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á)
36. **scan_mission_pad()** - ‡πÅ‡∏™‡∏Å‡∏ô Mission Pad
37. **smart_mission_pad_scan(image_path=None, use_multiple_methods=True)** - ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á
38. **scan_mission_pad_enhanced(attempts=3, delay=1.0)** - ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á

### ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏ö
39. **set_mission_pad_confidence(threshold)** - ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏±‡πà‡∏ô
40. **get_mission_pad_templates_info()** - ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• templates
41. **test_mission_pad_detection(test_image_path)** - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
42. **test_mission_pad_detection_simple()** - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
43. **debug_mission_pad_system()** - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
- scan_qr_code(image_path) # ‡πÅ‡∏™‡∏Å‡∏ô QR Code ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û
- draw_qr_detection(image_path, output_path=None) # ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≠‡∏ö QR Code

#### Integrated QR Functions
- scan_qr(filename) # ‡πÅ‡∏™‡∏Å‡∏ô QR Code (real drone)
- scan_qr(image_path=None) # ‡πÅ‡∏™‡∏Å‡∏ô QR Code (simulation)

### üéØ MISSION PAD FUNCTIONS

#### Basic Mission Pad
- enable_mission_pads() # ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô mission pad detection
- disable_mission_pads() # ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô mission pad detection
- scan_mission_pad() # ‡πÅ‡∏™‡∏Å‡∏ô mission pad
- get_mission_pad_id() # ‡∏≠‡πà‡∏≤‡∏ô mission pad ID
- set_mission_pad_confidence(threshold) # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à

#### Enhanced Mission Pad
- scan_mission_pad_enhanced(attempts=3, delay=1.0) # ‡πÅ‡∏™‡∏Å‡∏ô‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á
- smart_mission_pad_scan(image_path=None, use_multiple_methods=True) # ‡πÅ‡∏™‡∏Å‡∏ô‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞
- test_mission_pad_detection(test_image_path) # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö
- test_mission_pad_detection_simple() # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
- get_mission_pad_templates_info() # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• templates
- debug_mission_pad_system() # ‡∏î‡∏µ‡∏ö‡∏±‡∏Å mission pad system

### üìä SENSOR & STATUS FUNCTIONS

#### Position & Orientation
- get_position() # ‡∏≠‡πà‡∏≤‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
- get_orientation() # ‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤
- update_orientation() # ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏≤‡∏£‡∏´‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤

#### Battery & Status
- get_battery() # ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà (%)

#### Proximity Sensors (ProximitySensorManager)
- read_distance() # ‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á proximity sensor
- get_height() # ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
- get_altitude() # ‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
- is_close_to_ground(threshold=0.3) # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏Å‡∏•‡πâ‡∏û‡∏∑‡πâ‡∏ô
- is_safe_altitude(min_height=0.3) # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
- read_proximity_sensor(sensor_name='bottom') # ‡∏≠‡πà‡∏≤‡∏ô sensor ‡πÄ‡∏â‡∏û‡∏≤‡∏∞
- get_sensor_info() # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• sensor ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

#### Advanced Altitude Control
- wait_until_height(target_height, timeout=10) # ‡∏£‡∏≠‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
- monitor_height(duration=5) # ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
- auto_maintain_altitude(target_height=1.0, tolerance=0.1, max_time=30) # ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
- smart_landing(check_interval=0.5, safe_height=0.15) # ‡∏•‡∏á‡∏à‡∏≠‡∏î‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞

### üå™Ô∏è WIND SIMULATION FUNCTIONS

#### Wind System Setup
- setup_wind_system() # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏°
- set_wind_strength(strength) # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏£‡∏á‡∏•‡∏°
- set_wind_direction(x=0, y=0, z=0) # ‡∏ï‡∏±‡πâ‡∏á‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏•‡∏°
- enable_turbulence(enable=True) # ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î turbulence
- enable_wind_gusts(enable=True) # ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î wind gusts

#### Wind Presets
- set_calm_conditions() # ‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏™‡∏á‡∏ö
- set_light_breeze() # ‡∏•‡∏°‡πÄ‡∏ö‡∏≤‡πÜ
- set_moderate_wind() # ‡∏•‡∏°‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á
- set_strong_wind() # ‡∏•‡∏°‡πÅ‡∏£‡∏á
- create_realistic_wind_scenario() # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏•‡∏°‡∏à‡∏£‡∏¥‡∏á

#### Wind Zone & Testing
- create_wind_zone(name, x_min, y_min, x_max, y_max, wind_multiplier=1.0, turbulence_level=0.1) # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Ç‡∏ï‡∏•‡∏°
- get_wind_status() # ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
- test_wind_effects_simple() # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Ç‡∏≠‡∏á‡∏•‡∏°
- start_wind_demo() # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏ò‡∏¥‡∏ï‡∏•‡∏°

### üîß UTILITY FUNCTIONS

#### Wait & Control
- wait(seconds) # ‡∏£‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ (real drone)

#### Safety & Monitoring
- monitor_flight_safety(min_altitude=0.3, max_altitude=3.0, check_interval=1.0) # ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
- scan_surroundings_with_altitude(points=8) # ‡∏™‡πÅ‡∏Å‡∏ô‡∏£‡∏≠‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á

## üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

### Real Drone (DroneTello)
- ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏¢: ‡πÄ‡∏ã‡∏ô‡∏ï‡∏¥‡πÄ‡∏°‡∏ï‡∏£ (cm)
- ‡∏°‡∏∏‡∏°‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏¢: ‡∏≠‡∏á‡∏®‡∏≤ (degrees)
- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô move_back() ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á

### Simulation Drone (NaturalDroneController)
- ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏¢: ‡πÄ‡∏°‡∏ï‡∏£ (meters)
- ‡∏°‡∏∏‡∏°‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏¢: ‡∏≠‡∏á‡∏®‡∏≤ (degrees)
- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô move_backward() ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á
- ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏°‡πÅ‡∏•‡∏∞ proximity sensors

### ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

```python
# Simulation
drone = NaturalDroneController(use_simulation=True)
drone.takeoff()
drone.move_forward(1.0) # 1 ‡πÄ‡∏°‡∏ï‡∏£
drone.rotate_clockwise(90)
drone.land()

# Real Drone
drone = DroneTello()
drone.takeoff(100) # ‡∏Ç‡∏∂‡πâ‡∏ô 100 cm
drone.move_forward(100) # ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà 100 cm
drone.rotate_clockwise(90)
drone.land()
```

## üîÑ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó
- ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å drone_controller.py
- ‚úÖ ‡πÅ‡∏¢‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
- ‚úÖ ‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Real Drone ‡πÅ‡∏•‡∏∞ Simulation
- ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

## üìö CLASSES ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç

### 1. NaturalDroneController
- **‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå**: ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏î‡∏£‡∏ô‡πÉ‡∏ô CoppeliaSim simulation
- **‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå**: use_simulation=True
- **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ**: ‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏°, proximity sensors, mission pads
- **‡∏´‡∏ô‡πà‡∏ß‡∏¢**: ‡πÄ‡∏°‡∏ï‡∏£, ‡∏≠‡∏á‡∏®‡∏≤

### 2. DroneTello (extends Tello)
- **‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå**: ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏î‡∏£‡∏ô DJI Tello ‡∏à‡∏£‡∏¥‡∏á
- **‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå**: show_cam=False, enable_mission_pad=False
- **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ**: ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á, ‡∏ö‡∏¥‡∏ô‡∏à‡∏£‡∏¥‡∏á, mission pads
- **‡∏´‡∏ô‡πà‡∏ß‡∏¢**: ‡πÄ‡∏ã‡∏ô‡∏ï‡∏¥‡πÄ‡∏°‡∏ï‡∏£, ‡∏≠‡∏á‡∏®‡∏≤

### 3. DroneCamera
- **‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå**: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÉ‡∏ô simulation
- **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ**: ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û simcapture(), simcapturebottom()

### 4. QRCodeScanner
- **‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå**: ‡πÅ‡∏™‡∏Å‡∏ô QR Code ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û
- **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ**: scan_qr_code(), draw_qr_detection()

### 5. ProximitySensorManager
- **‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå**: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ proximity sensors ‡πÉ‡∏ô simulation
- **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ**: ‡∏ß‡∏±‡∏î‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢

### 6. ImprovedMissionPadDetector / MissionPadDetector
- **‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå**: ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö mission pads
- **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ**: ‡πÅ‡∏™‡∏Å‡∏ô mission pad templates

## üéØ COMPATIBILITY NOTES

### GUI Connector ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å `drone_gui_connector.py` ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á:

```python
# ‡πÉ‡∏ô GUI Connector
if self.drone_mode == "simulation":
success = self.current_drone.move_forward(distance) # ‡πÄ‡∏°‡∏ï‡∏£
elif self.drone_mode == "real":
self.current_drone.move_forward(distance_cm) # cm
```

### ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô
- **‡∏ó‡∏±‡πâ‡∏á Real Drone ‡πÅ‡∏•‡∏∞ Simulation**: `move_back()` ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á

### ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞
- **Real Drone**: ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô cm, takeoff(height), capture(filename)
- **Simulation**: ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô m, simcapture(), ‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏°, proximity sensors

## üö® ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç!
‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ô `drone_controller.py` ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏î‡πâ‡∏ß‡∏¢