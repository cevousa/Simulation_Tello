#!/usr/bin/env python3
"""
‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ProximitySensorManager ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡πÜ
"""

import time
import sys
import os



from drone_controller import NaturalDroneController

def simple_height_check():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡πÜ"""

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á drone controller
    drone = NaturalDroneController(use_simulation=True)
    
    if not drone.use_simulation:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ")
        return
    
    try:
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á sensor manager
        from drone_controller import ProximitySensorManager
        sensor = ProximitySensorManager(drone.sim, drone.drone_handle)

        drone.enable_mission_pads()
        
        if not sensor.setup():
            print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ sensor ‡πÑ‡∏î‡πâ")
            return
        
        # ‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏¥‡∏ô
        drone.takeoff(1.1)

        drone.move_forward(1.0)
        detected_id2 = drone.get_mission_pad_id()
        print(f"üéØ Detected Mission Pad ID: {detected_id2}")
        time.sleep(1)

        drone.move_forward(1.0)
        detected_id3 = drone.get_mission_pad_id()
        print(f"üéØ Detected Mission Pad ID: {detected_id3}")
        time.sleep(1)

        drone.move_forward(1)
        # ‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á 5 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
        for i in range(5):
            height = sensor.get_height()
            if height:
                print(f"‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà {i+1}: {height:.2f} ‡πÄ‡∏°‡∏ï‡∏£")
            else:
                print(f"‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà {i+1}: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
            time.sleep(1)
        
        # ‡∏•‡∏á‡∏à‡∏≠‡∏î
        drone.land()
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        drone.land()

    finally:
        # ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Mission Pad detection
        drone.disable_mission_pads()
        drone.disconnect()

if __name__ == "__main__":
    simple_height_check()
